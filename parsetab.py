
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND CHECK CHECKFROM COUNT CSV DELETE DISPLAY DOT EQUAL FILTER INF NAME NOT NUMBER PRED PREDEXT PRINT REFERENCE RENAME SELECT STRING STRINGCONTAINS STRINGEQUAL STRINGNOTEQUAL SUP VARexp : cmds\n           | type\n           | comparators\n           | csvfile\n           | pred\n           cmds : cmd mcmdmcmd : mcmd : cmd mcmdcmd : CHECK type\n           | CHECKFROM name_type\n           | ADD type\n           | DELETE type\n           | FILTER comparators\n           | CSV csvfile\n           | DISPLAY content\n           | PRINT STRING\n           | COUNT compnextelement\n           | SELECT variables\n           | REFERENCE element\n           | RENAME args\n           content : typecontent :comparators : comparator conjcomparatorcomparator : variable compnext\n                  | element compnextcompnext : symbol variable\n                | symbol elementcompnextelement : symbol elementconjcomparator : AND comparator conjcomparator\n    conjcomparator : symbol : EQUAL EQUAL\n              | INF EQUAL\n              | SUP EQUAL\n              | INF\n              | SUP\n              | STRINGEQUAL\n              | STRINGNOTEQUAL\n              | STRINGCONTAINS\n              type : element\n             | variable\n             | fact\n             | setvariable : VARelement : NUMBER\n               | NAME\n               | STRINGfact : element element elementset : set_fact conjsetset_fact : set_fact_classic\n                | set_fact_with_not\n    set_fact : fact\n                  set_fact_classic : set_element set_element set_element\n                        | element element VAR\n                  set_fact_with_not : NOT set_element set_element set_element\n                     | set_element NOT set_element set_element\n                     | set_element set_element NOT set_element\n                     | set_element set_element set_element NOT\n                     set_fact_with_not : element element set_element NOT\n                         | element element NOT set_element\n                     set_element : element\n                   | VAR\n    conjset : conjset : AND set_fact conjset\n    csvfile : NAME DOT CSVpred : NAME DOT PREDEXTname_type : NAME typevariables : VARvariables : VAR morevariablesmorevariables : VAR morevariablesmorevariables : VARargs : elementargs : element moreargsmoreargs : element moreargsmoreargs : element'
    
_lr_action_items = {'NAME':([0,8,13,14,15,16,17,18,19,20,22,25,26,27,28,32,33,36,38,39,41,42,43,44,45,48,53,56,67,72,74,75,76,77,78,79,84,87,88,89,98,102,104,105,106,113,],[13,38,-45,51,38,56,38,38,38,38,-46,38,38,-44,-61,38,38,38,-45,38,-34,-35,-36,-37,-38,38,38,38,38,38,38,38,38,-60,-61,38,38,-31,-32,-33,38,38,38,38,38,38,]),'CHECK':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[15,15,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,15,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'CHECKFROM':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[16,16,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,16,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'ADD':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[17,17,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,17,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'DELETE':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[18,18,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,18,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'FILTER':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[19,19,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,19,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'CSV':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,49,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[14,14,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,14,-25,-45,-24,-23,91,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,91,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'DISPLAY':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[20,20,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,20,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'PRINT':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[21,21,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,21,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'COUNT':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[23,23,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,23,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'SELECT':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[24,24,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,24,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'REFERENCE':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[25,25,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,25,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'RENAME':([0,7,10,11,12,20,22,27,28,29,30,31,34,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,81,82,85,86,90,91,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[26,26,-41,-42,-30,-22,-46,-44,-43,-62,-49,-50,26,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-47,-53,-26,-27,-30,-64,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'NUMBER':([0,8,13,15,17,18,19,20,22,25,26,27,28,32,33,36,38,39,41,42,43,44,45,48,53,56,67,72,74,75,76,77,78,79,84,87,88,89,98,102,104,105,106,113,],[27,27,-45,27,27,27,27,27,-46,27,27,-44,-61,27,27,27,-45,27,-34,-35,-36,-37,-38,27,27,27,27,27,27,27,27,-60,-61,27,27,-31,-32,-33,27,27,27,27,27,27,]),'STRING':([0,8,13,15,17,18,19,20,21,22,25,26,27,28,32,33,36,38,39,41,42,43,44,45,48,53,56,67,72,74,75,76,77,78,79,84,87,88,89,98,102,104,105,106,113,],[22,22,-45,22,22,22,22,22,65,-46,22,22,-44,-61,22,22,22,-45,22,-34,-35,-36,-37,-38,22,22,22,22,22,22,22,22,-60,-61,22,22,-31,-32,-33,22,22,22,22,22,22,]),'VAR':([0,8,13,15,17,18,19,20,22,24,27,28,32,33,36,38,39,41,42,43,44,45,48,53,56,69,74,75,76,77,78,79,84,87,88,89,96,102,104,105,106,113,],[28,-60,-45,28,28,28,62,28,-46,69,-44,-61,78,78,82,-45,62,-34,-35,-36,-37,-38,62,-60,28,96,78,78,78,-60,-61,78,78,-31,-32,-33,96,-60,78,78,78,82,]),'NOT':([0,8,13,15,17,18,20,22,27,28,32,36,38,53,56,74,75,77,78,81,82,83,102,103,113,],[33,-60,-45,33,33,33,33,-46,-44,-61,76,84,-45,-60,33,33,104,-60,-61,-60,-61,107,-60,114,84,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,20,22,27,28,29,30,31,34,35,37,38,46,47,50,52,53,54,55,57,58,59,62,63,64,65,66,68,69,70,71,72,73,77,78,80,81,82,85,86,90,91,92,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,],[0,-1,-2,-3,-4,-5,-7,-39,-40,-41,-42,-30,-45,-22,-46,-44,-43,-62,-49,-50,-7,-6,-25,-45,-24,-23,-14,-9,-39,-40,-10,-11,-12,-13,-43,-15,-21,-16,-17,-18,-67,-19,-20,-71,-48,-60,-61,-8,-47,-53,-26,-27,-30,-64,-65,-66,-28,-70,-68,-74,-72,-62,-51,-52,-58,-59,-29,-69,-73,-63,-57,-56,-55,-54,]),'EQUAL':([8,9,13,22,23,27,28,38,40,41,42,60,61,62,],[40,40,-45,-46,40,-44,-43,-45,87,88,89,40,40,-43,]),'INF':([8,9,13,22,23,27,28,38,60,61,62,],[41,41,-45,-46,41,-44,-43,-45,41,41,-43,]),'SUP':([8,9,13,22,23,27,28,38,60,61,62,],[42,42,-45,-46,42,-44,-43,-45,42,42,-43,]),'STRINGEQUAL':([8,9,13,22,23,27,28,38,60,61,62,],[43,43,-45,-46,43,-44,-43,-45,43,43,-43,]),'STRINGNOTEQUAL':([8,9,13,22,23,27,28,38,60,61,62,],[44,44,-45,-46,44,-44,-43,-45,44,44,-43,]),'STRINGCONTAINS':([8,9,13,22,23,27,28,38,60,61,62,],[45,45,-45,-46,45,-44,-43,-45,45,45,-43,]),'AND':([10,12,22,27,29,30,31,37,38,46,62,77,78,81,82,85,86,90,100,101,103,107,108,114,115,116,117,],[-51,48,-46,-44,74,-49,-50,-25,-45,-24,-43,-60,-61,-47,-53,-26,-27,48,74,-51,-52,-58,-59,-57,-56,-55,-54,]),'DOT':([13,51,],[49,93,]),'PREDEXT':([49,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,],[1,]),'cmds':([0,],[2,]),'type':([0,15,17,18,20,56,],[3,52,57,58,64,94,]),'comparators':([0,19,],[4,59,]),'csvfile':([0,14,],[5,50,]),'pred':([0,],[6,]),'cmd':([0,7,34,],[7,34,34,]),'element':([0,8,15,17,18,19,20,25,26,32,33,36,39,48,53,56,67,72,74,75,76,79,84,98,102,104,105,106,113,],[8,36,53,53,53,61,53,70,72,77,77,81,86,61,36,53,95,98,102,77,77,77,77,98,113,77,77,77,81,]),'variable':([0,15,17,18,19,20,39,48,56,],[9,54,54,54,60,54,85,60,54,]),'fact':([0,15,17,18,20,56,74,],[10,10,10,10,10,10,101,]),'set':([0,15,17,18,20,56,],[11,11,11,11,11,11,]),'comparator':([0,19,48,],[12,12,90,]),'set_fact':([0,15,17,18,20,56,74,],[29,29,29,29,29,29,100,]),'set_fact_classic':([0,15,17,18,20,56,74,],[30,30,30,30,30,30,30,]),'set_fact_with_not':([0,15,17,18,20,56,74,],[31,31,31,31,31,31,31,]),'set_element':([0,15,17,18,20,32,33,36,56,74,75,76,79,84,104,105,106,113,],[32,32,32,32,32,75,79,83,32,32,103,105,106,108,115,116,117,83,]),'mcmd':([7,34,],[35,80,]),'compnext':([8,9,60,61,],[37,46,46,37,]),'symbol':([8,9,23,60,61,],[39,39,67,39,39,]),'conjcomparator':([12,90,],[47,109,]),'name_type':([16,],[55,]),'content':([20,],[63,]),'compnextelement':([23,],[66,]),'variables':([24,],[68,]),'args':([26,],[71,]),'conjset':([29,100,],[73,112,]),'morevariables':([69,96,],[97,110,]),'moreargs':([72,98,],[99,111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> cmds','exp',1,'p_exp','typeParser.py',81),
  ('exp -> type','exp',1,'p_exp','typeParser.py',82),
  ('exp -> comparators','exp',1,'p_exp','typeParser.py',83),
  ('exp -> csvfile','exp',1,'p_exp','typeParser.py',84),
  ('exp -> pred','exp',1,'p_exp','typeParser.py',85),
  ('cmds -> cmd mcmd','cmds',2,'p_cmds','typeParser.py',91),
  ('mcmd -> <empty>','mcmd',0,'p_mcmd0','typeParser.py',100),
  ('mcmd -> cmd mcmd','mcmd',2,'p_mcmd1','typeParser.py',105),
  ('cmd -> CHECK type','cmd',2,'p_cmd','typeParser.py',114),
  ('cmd -> CHECKFROM name_type','cmd',2,'p_cmd','typeParser.py',115),
  ('cmd -> ADD type','cmd',2,'p_cmd','typeParser.py',116),
  ('cmd -> DELETE type','cmd',2,'p_cmd','typeParser.py',117),
  ('cmd -> FILTER comparators','cmd',2,'p_cmd','typeParser.py',118),
  ('cmd -> CSV csvfile','cmd',2,'p_cmd','typeParser.py',119),
  ('cmd -> DISPLAY content','cmd',2,'p_cmd','typeParser.py',120),
  ('cmd -> PRINT STRING','cmd',2,'p_cmd','typeParser.py',121),
  ('cmd -> COUNT compnextelement','cmd',2,'p_cmd','typeParser.py',122),
  ('cmd -> SELECT variables','cmd',2,'p_cmd','typeParser.py',123),
  ('cmd -> REFERENCE element','cmd',2,'p_cmd','typeParser.py',124),
  ('cmd -> RENAME args','cmd',2,'p_cmd','typeParser.py',125),
  ('content -> type','content',1,'p_content1','typeParser.py',131),
  ('content -> <empty>','content',0,'p_content2','typeParser.py',136),
  ('comparators -> comparator conjcomparator','comparators',2,'p_is_comparators','typeParser.py',141),
  ('comparator -> variable compnext','comparator',2,'p_is_comparator','typeParser.py',150),
  ('comparator -> element compnext','comparator',2,'p_is_comparator','typeParser.py',151),
  ('compnext -> symbol variable','compnext',2,'p_is_comparator2','typeParser.py',156),
  ('compnext -> symbol element','compnext',2,'p_is_comparator2','typeParser.py',157),
  ('compnextelement -> symbol element','compnextelement',2,'p_is_comparator3','typeParser.py',161),
  ('conjcomparator -> AND comparator conjcomparator','conjcomparator',3,'p_conjcomparator2','typeParser.py',165),
  ('conjcomparator -> <empty>','conjcomparator',0,'p_conjcomparator','typeParser.py',175),
  ('symbol -> EQUAL EQUAL','symbol',2,'p_symbol','typeParser.py',180),
  ('symbol -> INF EQUAL','symbol',2,'p_symbol','typeParser.py',181),
  ('symbol -> SUP EQUAL','symbol',2,'p_symbol','typeParser.py',182),
  ('symbol -> INF','symbol',1,'p_symbol','typeParser.py',183),
  ('symbol -> SUP','symbol',1,'p_symbol','typeParser.py',184),
  ('symbol -> STRINGEQUAL','symbol',1,'p_symbol','typeParser.py',185),
  ('symbol -> STRINGNOTEQUAL','symbol',1,'p_symbol','typeParser.py',186),
  ('symbol -> STRINGCONTAINS','symbol',1,'p_symbol','typeParser.py',187),
  ('type -> element','type',1,'p_is_type','typeParser.py',193),
  ('type -> variable','type',1,'p_is_type','typeParser.py',194),
  ('type -> fact','type',1,'p_is_type','typeParser.py',195),
  ('type -> set','type',1,'p_is_type','typeParser.py',196),
  ('variable -> VAR','variable',1,'p_is_variable','typeParser.py',201),
  ('element -> NUMBER','element',1,'p_is_element','typeParser.py',206),
  ('element -> NAME','element',1,'p_is_element','typeParser.py',207),
  ('element -> STRING','element',1,'p_is_element','typeParser.py',208),
  ('fact -> element element element','fact',3,'p_is_fact','typeParser.py',213),
  ('set -> set_fact conjset','set',2,'p_is_set0','typeParser.py',218),
  ('set_fact -> set_fact_classic','set_fact',1,'p_is_set1','typeParser.py',227),
  ('set_fact -> set_fact_with_not','set_fact',1,'p_is_set1','typeParser.py',228),
  ('set_fact -> fact','set_fact',1,'p_is_set1_0','typeParser.py',234),
  ('set_fact_classic -> set_element set_element set_element','set_fact_classic',3,'p_is_set2','typeParser.py',241),
  ('set_fact_classic -> element element VAR','set_fact_classic',3,'p_is_set2','typeParser.py',242),
  ('set_fact_with_not -> NOT set_element set_element set_element','set_fact_with_not',4,'p_is_set3','typeParser.py',252),
  ('set_fact_with_not -> set_element NOT set_element set_element','set_fact_with_not',4,'p_is_set3','typeParser.py',253),
  ('set_fact_with_not -> set_element set_element NOT set_element','set_fact_with_not',4,'p_is_set3','typeParser.py',254),
  ('set_fact_with_not -> set_element set_element set_element NOT','set_fact_with_not',4,'p_is_set3','typeParser.py',255),
  ('set_fact_with_not -> element element set_element NOT','set_fact_with_not',4,'p_is_set3_0','typeParser.py',269),
  ('set_fact_with_not -> element element NOT set_element','set_fact_with_not',4,'p_is_set3_0','typeParser.py',270),
  ('set_element -> element','set_element',1,'p_is_set4','typeParser.py',280),
  ('set_element -> VAR','set_element',1,'p_is_set4','typeParser.py',281),
  ('conjset -> <empty>','conjset',0,'p_is_set5','typeParser.py',289),
  ('conjset -> AND set_fact conjset','conjset',3,'p_is_set6','typeParser.py',294),
  ('csvfile -> NAME DOT CSV','csvfile',3,'p_is_csv','typeParser.py',304),
  ('pred -> NAME DOT PREDEXT','pred',3,'p_is_pred','typeParser.py',309),
  ('name_type -> NAME type','name_type',2,'p_check_from','typeParser.py',314),
  ('variables -> VAR','variables',1,'p_variable_list0','typeParser.py',318),
  ('variables -> VAR morevariables','variables',2,'p_variable_list1','typeParser.py',322),
  ('morevariables -> VAR morevariables','morevariables',2,'p_variable_list2','typeParser.py',327),
  ('morevariables -> VAR','morevariables',1,'p_variable_list3','typeParser.py',332),
  ('args -> element','args',1,'p_args0','typeParser.py',337),
  ('args -> element moreargs','args',2,'p_args1','typeParser.py',342),
  ('moreargs -> element moreargs','moreargs',2,'p_args2','typeParser.py',347),
  ('moreargs -> element','moreargs',1,'p_args3','typeParser.py',352),
]
